@model List<Medicine>
@{
    ViewData["Title"] = "Store";
}

<div class="bg-light py-3">
    <div class="container">
        <div class="row">
            <div class="col-md-12 mb-0">
                <a href="/">Home</a> <span class="mx-2 mb-0">/</span>
                <strong class="text-black">@ViewBag.Title</strong>
            </div>
        </div>
    </div>
</div>

<div class="site-section">
    <div class="container">
        @if (Model.Any())
        {
            <div class="row">
                <div class="col-lg-6">
                    <h3 class="mb-3 h6 text-uppercase text-black d-block">Filter by Price</h3>
                    <div id="slider-range" class="border-primary"></div>
                    <input type="text" name="text" id="amount" class="form-control border-0 pl-0 bg-white" disabled="" />
                </div>
                <div class="col-lg-6">
                    <h3 class="mb-3 h6 text-uppercase text-black d-block">Filter by Reference</h3>
                    <button type="button" class="btn btn-secondary btn-md dropdown-toggle px-4" id="dropdownMenuReference"
                            data-toggle="dropdown">
                        Reference
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuReference">
                        <a class="dropdown-item" asp-action="DisplayUsingNameFromAToZ">Name, A to Z</a>
                        <a class="dropdown-item" asp-action="DisplayUsingNameFromZToA">Name, Z to A</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" asp-action="DisplayUsingPriceLowToHigh">Price, low to high</a>
                        <a class="dropdown-item" asp-action="DisplayUsingPriceHighToLow">Price, high to low</a>
                    </div>
                </div>
            </div>
        }

        @**************** pagination **********************@

        <div class="container">
            <div class="row" id="productGrid">
                <!-- Product Cards will be dynamically added here -->
            </div>
        </div>

        @* <ul id="pagination" class="pagination justify-content-center"></ul> *@

        @if (Model.Any())
        {
            <div class="row mt-5">
                <div class="col-md-12 text-center">
                    <div class="site-block-27">
                        <ul id="pagination">
                            <!-- Pagination Buttons will be dynamically inserted here -->
                        </ul>
                    </div>
                </div>
            </div>
        }
        @section Scripts {
            @*  <script type="text/javascript">
        $(document).ready(function () {
        debugger;
        $.ajax({
        "url": "/Home/StoreInJSON",  // Controller action that returns product data
        "type": "GET",
        "datatype": "json",
        "success": function (response) {
        // Iterate through the product list and create a card for each product
        // var products = response.data;
        console.log(response);
        var products = response.data || response;  // Handle cases where 'data' might be missing

        var productGrid = $('#productGrid'); // Select the product grid container

        products.forEach(function (product) {
        // Create a card for each product
        var productCard = `
        <div class="col-sm-6 col-lg-4 text-center item mb-4">
        <span class="tag">Sale</span>
        <a href="/Medicine/Details/${product.id}">
        <img src="/files/images/${product.imageName}" class="card-img-top img-fluid mb-3" style="max-height:300px; max-width:250px;" alt="${product.Name}">
        </a>
        <h3 class="text-dark">
        <a href="/Medicine/Details/${product.id}">${product.name}</a>
        </h3>
        <p class="price"><del>$95.00</del> &mdash; $${product.price}</p>
        </div>
        `;
        // Append the card to the grid
        productGrid.append(productCard);
        });
        }
        });
        }); *@
            @* </script> *@

            <script type="text/javascript">
                $(document).ready(function () {
                    const productsPerPage = 6;
                    let currentPage = 1;
                    let totalPages = 0;
                    let products = [];

                    function displayPage(page) {
                        let start = (page - 1) * productsPerPage;
                        let end = start + productsPerPage;
                        let paginatedProducts = products.slice(start, end);
                        let productGrid = $('#productGrid');
                        productGrid.empty();  // Clear the grid

                        // Append the products for the current page
                        paginatedProducts.forEach(function (product) {
                            let productCard = `
                                    <div class="col-sm-6 col-lg-4 text-center item mb-4">
                                        <span class="tag">Sale</span>
                                        <a href="/Medicine/Details/${product.id}">
                                            <img src="/files/images/${product.imageName}" class="card-img-top img-fluid mb-3" style="max-height:300px; max-width:250px;" alt="${product.name}">
                                        </a>
                                        <h3 class="text-dark">
                                                            <a href="/Medicine/Details/${product.id}">${product.name}</a>
                                        </h3>
                                        <p class="price"><del>$95.00</del> &mdash; $${product.price}</p>
                                    </div>
                                `;
                            productGrid.append(productCard);
                        });

                        // Update the pagination view
                        renderPagination();
                    }

                    function renderPagination() {
                        let pagination = $('#pagination');
                        pagination.empty();  // Clear the pagination buttons

                        let prevDisabled = currentPage === 1 ? 'disabled' : '';
                        let nextDisabled = currentPage === totalPages ? 'disabled' : '';

                        // Add previous button
                        pagination.append(`<li class="${prevDisabled}"><a href="#" id="prevPage">&lt;</a></li>`);

                        // Add numbered page buttons
                        for (let i = 1; i <= totalPages; i++) {
                            let activeClass = currentPage === i ? 'active' : '';
                            pagination.append(`<li class="${activeClass}"><a href="#" class="page-link" data-page="${i}">${i}</a></li>`);
                        }

                        // Add next button
                        pagination.append(`<li class="${nextDisabled}"><a href="#" id="nextPage">&gt;</a></li>`);

                        // Click events for page numbers
                        $('.page-link').click(function (e) {
                            e.preventDefault();
                            currentPage = parseInt($(this).attr('data-page'));
                            displayPage(currentPage);
                        });

                        // Previous and next click events
                        $('#prevPage').click(function (e) {
                            e.preventDefault();
                            if (currentPage > 1) {
                                currentPage--;
                                displayPage(currentPage);
                            }
                        });

                        $('#nextPage').click(function (e) {
                            e.preventDefault();
                            if (currentPage < totalPages) {
                                currentPage++;
                                displayPage(currentPage);
                            }
                        });
                    }

                    // Fetch products from the server
                    $.ajax({
                        url: "/Home/StoreInJSON",
                        type: "GET",
                        datatype: "json",
                        success: function (response) {
                            products = response.data || response;
                            totalPages = Math.ceil(products.length / productsPerPage);

                            if (products.length > 0) {
                                displayPage(1); // Show the first page initially
                            }
                        }
                    });
                });
            </script>
        }
    </div>
   
</div>


<div class="site-section bg-secondary bg-image" style="background-image: url('/images/bg_2.jpg');">
    <div class="container">
        <div class="row align-items-stretch">
            <div class="col-lg-6 mb-5 mb-lg-0">
                <a href="#" class="banner-1 h-100 d-flex" style="background-image: url('/images/bg_1.jpg');">
                    <div class="banner-1-inner align-self-center">
                        <h2>Pharma Products</h2>
                        <p>
                            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Molestiae ex ad minus rem odio voluptatem.
                        </p>
                    </div>
                </a>
            </div>
            <div class="col-lg-6 mb-5 mb-lg-0">
                <a href="#" class="banner-1 h-100 d-flex" style="background-image: url('/images/bg_2.jpg');">
                    <div class="banner-1-inner ml-auto  align-self-center">
                        <h2>Rated by Experts</h2>
                        <p>
                            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Molestiae ex ad minus rem odio voluptatem.
                        </p>
                    </div>
                </a>
            </div>
        </div>
    </div>
</div>

